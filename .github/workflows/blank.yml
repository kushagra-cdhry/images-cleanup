name: Delete Old ECR Images

on:
  schedule:
    - cron: '0 0 * * 0' # This will run every Sunday at midnight UTC
  workflow_dispatch:

jobs:
  delete-old-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: List ECR Repositories
        id: list_repositories
        run: |
          echo "Fetching repositories from ECR..."
          repositories=$(aws ecr describe-repositories --query 'repositories[*].repositoryName' --output text)
          echo "Repositories fetched: $repositories"
          echo "repositories=$repositories" >> $GITHUB_ENV  # Set the repositories in an environment variable

      - name: Delete Old Images from Each Repository
        run: |
          repositories=($repositories)  # Use the environment variable set above
          keep=4

          for repo in "${repositories[@]}"; do
              echo "Fetching images for repository: $repo"
              images=$(aws ecr list-images --repository-name "$repo" --query 'imageIds[*].imageTag' --output text)
              images_array=($images)
              num_images=${#images_array[@]}
              
              if (( num_images > keep )); then
                  echo "Deleting old images from $repo..."
                  images_to_delete=(${images_array[@]:keep})
                  for image in "${images_to_delete[@]}"; do
                      echo "Deleting image: $image from $repo"
                      aws ecr batch-delete-image --repository-name "$repo" --image-ids imageTag="$image"
                  done
              else
                  echo "No images to delete in $repo. Keeping all $num_images images."
              fi
          done
